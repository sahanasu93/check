# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
#hello

trigger:
- main
- stage

variables:
- name: system.debug
  value: true 

pool:
  vmImage: windows-latest

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore code'
  inputs:
    command: 'restore'
    projects: 'ArchiSteamFarm.sln'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'ArchiSteamFarm/ArchiSteamFarm.csproj'
    arguments: '-c "Release" -f "net6.0" -o "out/generic"'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Test'
    organization: 'sahanaumesh'
    scannerMode: 'MSBuild'
    configMode: 'manual'
    ProjectKey: 'sahanasu93_check'
    ProjectName: 'check'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      New-Item -Path '$(Build.ArtifactStagingDirectory)/Sonarcloud' -ItemType Directory
      New-Item -Path '$(Build.ArtifactStagingDirectory)/Artifact' -ItemType Directory

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'ArchiSteamFarm.sln'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'ArchiSteamFarm.Tests/ArchiSteamFarm.Tests.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: 'ArchiSteamFarm.Tests/ArchiSteamFarm.Tests.csproj'
    arguments: '--configuration $(buildConfiguration) --logger trx --collect "Code coverage"'

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: CopyFiles@2
  inputs:
    Contents: 'out/generic/ArchiSteamFarm.zip'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Artifact'

- task: CopyFiles@2
  inputs:
    Contents: '.scannerwork/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Sonarcloud'

- task: CopyFiles@2
  inputs:
    Contents: '.sqAnalysis/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Sonarcloud'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/Artifact'
    ArtifactName: 'archi'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/Sonarcloud'
    ArtifactName: 'Sonar'
    publishLocation: 'Container'

- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: 'SSH'
    sourceFolder: '$(Build.ArtifactStagingDirectory)/Artifact'
    contents: '**'
    targetFolder: 'C:/Users/azureuser'
    isWindowsOnTarget: true
    readyTimeout: '20000'